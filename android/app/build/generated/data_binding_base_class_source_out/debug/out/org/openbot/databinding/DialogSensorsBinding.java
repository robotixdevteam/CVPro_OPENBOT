// Generated by view binder compiler. Do not edit!
package org.openbot.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openbot.R;

public final class DialogSensorsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView4;

  @NonNull
  public final EditText delay;

  @NonNull
  public final LinearLayout delayContainer;

  @NonNull
  public final Button dismiss;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final RecyclerView listView;

  @NonNull
  public final CheckBox selectAllCheck;

  @NonNull
  public final TextView textView;

  private DialogSensorsBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardView4,
      @NonNull EditText delay, @NonNull LinearLayout delayContainer, @NonNull Button dismiss,
      @NonNull LinearLayout linearLayout, @NonNull RecyclerView listView,
      @NonNull CheckBox selectAllCheck, @NonNull TextView textView) {
    this.rootView = rootView;
    this.cardView4 = cardView4;
    this.delay = delay;
    this.delayContainer = delayContainer;
    this.dismiss = dismiss;
    this.linearLayout = linearLayout;
    this.listView = listView;
    this.selectAllCheck = selectAllCheck;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogSensorsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogSensorsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_sensors, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogSensorsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView4;
      CardView cardView4 = ViewBindings.findChildViewById(rootView, id);
      if (cardView4 == null) {
        break missingId;
      }

      id = R.id.delay;
      EditText delay = ViewBindings.findChildViewById(rootView, id);
      if (delay == null) {
        break missingId;
      }

      id = R.id.delayContainer;
      LinearLayout delayContainer = ViewBindings.findChildViewById(rootView, id);
      if (delayContainer == null) {
        break missingId;
      }

      id = R.id.dismiss;
      Button dismiss = ViewBindings.findChildViewById(rootView, id);
      if (dismiss == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.listView;
      RecyclerView listView = ViewBindings.findChildViewById(rootView, id);
      if (listView == null) {
        break missingId;
      }

      id = R.id.selectAllCheck;
      CheckBox selectAllCheck = ViewBindings.findChildViewById(rootView, id);
      if (selectAllCheck == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new DialogSensorsBinding((ConstraintLayout) rootView, cardView4, delay, delayContainer,
          dismiss, linearLayout, listView, selectAllCheck, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
